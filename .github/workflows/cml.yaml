name: federated-learning-flower
on: [push]
jobs:
  run:
    runs-on: ubuntu-latest
    # optionally use a convenient Ubuntu LTS + DVC + CML image
    #container: ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - uses: actions/checkout@v3
      # may need to setup NodeJS & Python3 on e.g. self-hosted
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - uses: iterative/setup-cml@v1
      
      - name: Set up Python environment
        run: |
          python -m pip install --upgrade pip
          pip debug --verbose
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install mamba
          mamba init
          source ~/.bashrc
          mamba create
          mamba activate
          pip install scikit-learn
          pip install -U flwr["simulation"]
          pip install -U "ray[all]"
          pip install torch
          pip install torchvision
          pip install torchaudio
          pip install hydra-core
          pip install -r requirements.txt
          python main.py

          mkdir -p outputs
          mv *.png outputs/

      - name: Upload outputs
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: outputs/

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v4
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
          
              const { Octokit } = require("@octokit/rest");
              const token = process.env.GITHUB_TOKEN;
              const octokit = new Octokit({ auth: token });
              const context = github.context;
              const prNumber = context.payload.pull_request.number;

              const images = ["data_distributions.png", "feature_importance.png"];
              const commentBody = images.map(img => `![${img}](https://github.com/${context.repo.owner}/${context.repo.repo}/suites/${context.run_id}/artifacts/${artifact_id})`).join('\n');

              await octokit.issues.createComment({
              ...context.repo,
            issue_number: prNumber,
            body: commentBody,
              });
